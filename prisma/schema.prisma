// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  username      String         @unique
  password      String
  comments      Comment[]
  notifications Notification[]
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")

  @@map("users")
}

model Notification {
  id        String   @id @default(uuid())
  type      String
  message   String
  userId    String  // recipient
  commentId String? 
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@map("notification")
}

model Comment {
  id       String @id @default(cuid())
  content  String
  authorId String @map("author_id")
  author   User   @relation(fields: [authorId], references: [id])

  // Self-referential relation for nested comments
  parentId String?   @map("parent_id")
  parent   Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
  replies  Comment[] @relation("CommentReplies")

  // Additional fields for comment tree structure
  rootId String? @map("root_id")
  depth  Int     @default(0)
  path   String?

  // Status fields
  isDeleted Boolean @default(false) @map("is_deleted")
  isEdited  Boolean @default(false) @map("is_edited")

  // Timestamps
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("comments")
}
